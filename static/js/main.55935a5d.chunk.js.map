{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","Image/corona.jpg"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separat","Date","toDateString","separator","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","corona","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55935a5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from  '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nconst Cards = ({data: { confirmed, recovered, deaths, lastUpdate}}) => {\n    if (!confirmed) {\n        return 'Loading...';\n    }\n\n    return(\n        <div className={styles.container}>\n            <Grid container spacing ={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className= {cx(styles.card, styles.infected)}>\n                <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                    <Typography variant=\"h5\"> \n                    \n                    <CountUp \n                    \n                    start={0}\n                    end={confirmed.value}\n                    duration={2.5}\n                    separat= ',' />     \n\n                    \n                    </Typography>\n                    <Typography color=\"textSecondary\">{ new Date (lastUpdate).toDateString() }</Typography>\n                    <Typography variant=\"body2\">Number of active cases of Covid-19</Typography>\n                </CardContent>\n\n                </Grid>\n\n                <Grid item component={Card} xs={12} md={3} className= {cx(styles.card, styles.recovered)}>\n                <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                    <Typography variant=\"h5\">\n                    <CountUp \n                    \n                    start={0}\n                    end={recovered.value}\n                    duration={2.5}\n                    separat= ',' />\n                    </Typography>\n                    <Typography color=\"textSecondary\">{ new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography variant=\"body2\">Number of recoveries from Covid-19</Typography>\n                </CardContent>\n\n                </Grid>\n\n                <Grid item component={Card} xs={12} md={3} className= {cx(styles.card, styles.deaths)}>\n                <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                    <Typography variant=\"h5\">\n                        <CountUp \n                            start={0}\n                            end={deaths.value}\n                            duration={2.5}\n                            separator=','\n                        />\n                    </Typography>\n                    <Typography color=\"textSecondary\"> { new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography variant=\"body2\">Number of death cases of Covid-19</Typography>\n                </CardContent>\n\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n// import CountryPicker from '../components/CountryPicker/CountryPicker';\n\n\nconst url = 'https://covid-19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n\n    let  changeableUrl = url;\n\n    if (country) {\n        changeableUrl = `${url}/countries/${country}`;\n    }\n\n    try {\n        const { data : { confirmed, recovered, deaths, lastUpdate }} = await axios.get(changeableUrl);\n\n        const modifiedData = {\n\n            confirmed:confirmed,\n            recovered: recovered,\n            deaths: deaths,\n            lastUpdate:lastUpdate,\n\n        }\n\n        return modifiedData;              \n\n    } catch (error) {\n\n      console.log(error);\n\n\n    }\n}\n\nexport const fetchDailyData = async () => {\n\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n\n        const modifiedData =data.map((dailyData) => ({\n            confirmed:dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date:dailyData.reportDate,\n        }));\n\n        return modifiedData;\n\n    } catch(error){\n        console.log(error);\n\n    }\n}\n\nexport const fetchCountries = async () => {\n\n    try {\n\n        const { data : {countries }} = await axios.get(`${url}/countries`);\n\n        return countries.map(( country) => country.name)\n\n\n    } catch(error) {\n        console.log(error);\n\n\n    }\n}","import React, { useEffect,useState } from 'react';\nimport {fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({data: { confirmed, recovered, deaths }, country } ) => {\n    const [ dailyData, setDailyData ] = useState ([]);\n\n    useEffect(() =>{\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n\n        fetchAPI();\n\n    },[]);\n\n\n    const lineChart = (\n\n        dailyData.length\n        ? ( <Line \n            data={{\n                labels: dailyData.map(( {date}) => date),\n                datasets: [{\n                    data: dailyData.map(( {confirmed}) => confirmed),\n                    label:'infected',\n                    borderColor: '#3333ff',\n                    fill:true,\n                }, {\n                    data: dailyData.map(( {deaths}) => deaths),\n                    label:'Deaths',\n                    borderColor: \"red\",\n                    backgroundColor: \"rgba( 255,0,0,0.5)\",\n                    fill:true,\n                }],\n            }}\n        />): null\n\n    );\n\n    console.log(confirmed,recovered,deaths)\n\n    const barChart = (\n        confirmed\n            ? (\n                <Bar \n                    data={{\n                        labels:[ 'Infected', 'Recovered', 'Deaths'],\n                        datasets: [{\n                            label:'People',\n                            backgroundColor: [\n                                'rgba(0,0,255,0.5)',\n                                'rgba(0, 255,0,0.5)',\n                                'rgba(158, 92, 92, 0.5)',\n                                ],\n\n                                data:[ confirmed.value,recovered.value,deaths.value]\n                                \n                        }]\n\n                    }}\n                    options={{\n                        legend:{ display: false},\n                        title: { display: true, text: `Current state in {country}`}\n                    }}\n                />\n\n            ) : null\n    );\n    return(\n        <div className={styles.container}>\n\n        {country ? barChart: lineChart}\n\n        </div>\n    )\n}\n\nexport default Chart;","import React, {useState, useEffect} from 'react';\nimport { NativeSelect,FormControl } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\n\nconst CountryPicker = ({handleCountryChange }) => {\n\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n\n        }\n        \n        fetchAPI();\n    }, [setFetchedCountries]);\n\n\n    // console.log(fetchedCountries);\n    return(\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue= '' onChange = {(e) => handleCountryChange(e.target.value)}>\n                <option value='global'>Global</option>\n                { fetchedCountries.map((country, i) => <option key={i} value={country}> {country} </option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\nimport corona from './Image/corona.jpg'\n\nclass App extends React.Component{\n\n    state = {\n        data: {},\n        country: '',\n    }\n    async componentDidMount () {\n\n        const fetchedData = await fetchData();\n\n        this.setState({ data: fetchedData })\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n\n        this.setState({ data : fetchedData, country:country });\n        \n    }\n    render() {\n        const { data, country } =this.state;\n        return(\n            <div className = {styles.container}>\n            <img  className={styles.image} src={corona} alt='COVID-19'/>\n                <Cards data= {data} />\n                <CountryPicker handleCountryChange= {this.handleCountryChange}/>\n                <Chart data= {data} country={country} />\n                \n            </div>\n        );\n    }\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/corona.aa33c98b.jpg\";"],"sourceRoot":""}